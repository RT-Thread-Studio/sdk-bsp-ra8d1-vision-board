name: RA8D1-VISION-BOARD

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  # Runs at 16:00 UTC (BeiJing 00:00) on the 1st of every month
  schedule:
    - cron:  '0 16 1 * *'
  push:
    branches:
      - master
    paths-ignore:
      - documentation/**
      - '**/README.md'
      # - '**/README_ZH.md'
  pull_request:
    branches:
      - master
    paths-ignore:
      - documentation/**
      - '**/README.md'
      # - '**/README_ZH.md'

env:
  RTT_TOOL_CHAIN: "sourcery-arm"

jobs:
  check:
    runs-on: ubuntu-latest
    name: check-yaml-format
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@master
        with:
          python-version: 3.8

      - name: Check yaml
        if: ${{ success() }}
        shell: bash
        run: |
          pip install rt-thread-studio
          python -c "from rt_thread_studio import bsp_checker;bsp_path = '.';checker = bsp_checker.BspChecker(bsp_path);checker.check();"

  compile:
    needs: [check]
    runs-on: ubuntu-latest
    name: ${{ matrix.legs.RTT_BSP }}
    strategy:
      fail-fast: false
      matrix:
       legs:
         - {RTT_BSP: "vision_board_blink_led"}
         - {RTT_BSP: "vision_board_wifi"}
         - {RTT_BSP: "vision_board_camera"}
         - {RTT_BSP: "vision_board_openmv"}
         - {RTT_BSP: "usb/vision_board_tinyusb_cdc"}
         - {RTT_BSP: "usb/vision_board_tinyusb_hid"}
         - {RTT_BSP: "usb/vision_board_tinyusb_uvc"}
         - {RTT_BSP: "usb/vision_board_tinyusb_msc"}
         - {RTT_BSP: "usb/vision_board_tinyusb_xpad"}
         - {RTT_BSP: "lcd/vision_board_mipi_2.0inch"}
         - {RTT_BSP: "lcd/vision_board_rgb_4.3inch"}
         - {RTT_BSP: "lcd/vision_board_mipi_7.0inch"}
         - {RTT_BSP: "nes/vision_board_rgb_4.3inch_nes"}
         - {RTT_BSP: "nes/vision_board_mipi_2.0inch_nes"}
         - {RTT_BSP: "doom/vision_board_rgb_4.3inch_doom"}
         - {RTT_BSP: "doom/vision_board_mipi_2.0inch_doom"}
         - {RTT_BSP: "lvgl/vision_board_rgb_4.3inch_lvgl"}
         - {RTT_BSP: "lvgl/vision_board_mipi_2.0inch_lvgl"}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@master
        with:
          python-version: 3.8

      - name: Install Arm ToolChains
        if: ${{ success() }}
        shell: bash
        run: |
          wget -c https://github.com/RT-Thread/toolchains-ci/releases/download/v1.8/arm-gnu-toolchain-13.2.rel1-x86_64-arm-none-eabi.tar.xz
          sudo tar -xf arm-gnu-toolchain-13.2.rel1-x86_64-arm-none-eabi.tar.xz -C /opt
          /opt/arm-gnu-toolchain-13.2.Rel1-x86_64-arm-none-eabi/bin/arm-none-eabi-gcc --version
          echo "RTT_EXEC_PATH=/opt/arm-gnu-toolchain-13.2.Rel1-x86_64-arm-none-eabi/bin" >> $GITHUB_ENV

      - name: Install Tools
        if: ${{ success() }}
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get -qq install gcc-multilib libsdl2-dev scons
          echo "RTT_ROOT=${{ github.workspace }}" >> $GITHUB_ENV
          echo "RTT_CC=gcc" >> $GITHUB_ENV

      - name: Compile ${{ matrix.legs.RTT_BSP }}
        if: ${{ success() }}
        shell: bash
        env:
          RTT_BSP: ${{ matrix.legs.RTT_BSP }}
        run: |
          cd projects
          scons -C $RTT_BSP

      - name: Archive Firmware
        if: ${{ success() }}
        uses: actions/upload-artifact@v2
        with:
          name: Firmware
          path: projects/${{ github.workspace }}/firmware